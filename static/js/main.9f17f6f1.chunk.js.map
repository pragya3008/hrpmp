{"version":3,"sources":["components/Welcome/Welcome.js","services/PostData.js","components/Home/Home.js","components/Employee/Employee.js","components/Employee/ForgotPassword.js","components/NotFound/NotFound.js","routes.js","components/Header/Header.js","components/Footer/Footer.js","components/MobileHeader/MobileHeader.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","className","id","href","Component","PostData","type","userData","Promise","resolve","reject","fetch","BaseURL","method","headers","body","JSON","stringify","then","response","json","res","catch","error","Home","props","state","data","userFeed","redirectToReferrer","name","getUserFeed","bind","feedUpdate","onChange","deleteFeed","editFeed","deleteFeedAction","logout","sessionStorage","getItem","this","setState","e","preventDefault","postData","user_id","parse","feed","result","responseJson","feedData","confirmAlert","title","message","buttons","label","onClick","updateIndex","target","getAttribute","feed_id","document","getElementById","splice","success","alert","console","log","value","setItem","clear","to","onSubmit","placeholder","Employee","username","password","employee","login","ForgotPassword","email","forgotpassword","signup","NotFound","Routes","exact","path","component","Header","Footer","MobileHeader","data-open","showSidebar","App","appName","home","data-off-canvas-wrapper","data-off-canvas-content","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f17f6f1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Welcome.css';\r\nclass Welcome extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"row \" id=\"Body\">\r\n<div className=\"medium-12 columns\">\r\n<h2 id=\"welcomeText\">Performance Management Authentication App</h2>\r\n<a href=\"/employee\" className=\"button\">Employee</a>\r\n<a href=\"/admin\" className=\"button success\">Administrator</a>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default Welcome;","export function PostData(type, userData) {\r\n    let BaseURL = 'http://localhost/react-php/api/index.php';\r\n    return new Promise((resolve, reject) =>{\r\n    \r\n    fetch(BaseURL+'?tp='+type,\r\n    {\r\n    \r\n    method: 'POST',\r\n    headers:\r\n    {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n    },\r\n    body:JSON.stringify(userData)\r\n    })\r\n    .then((response) => response.json()\r\n    .then((res) => {\r\n    resolve(res);\r\n    }))\r\n    .catch((error) => {\r\n    reject(error);\r\n    });\r\n    });\r\n    }","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Home.css';\r\nimport {PostData} from '../../services/PostData';\r\n//import UserFeed from \"../UserFeed/UserFeed\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport '../../styles/react-confirm-alert.css';\r\nclass Home extends Component {\r\nconstructor(props) {\r\nsuper(props);\r\nthis.state = {\r\ndata:[],\r\nuserFeed: '',\r\nredirectToReferrer: false,\r\nname:'',\r\n};\r\nthis.getUserFeed = this.getUserFeed.bind(this);\r\nthis.feedUpdate = this.feedUpdate.bind(this);\r\nthis.onChange = this.onChange.bind(this);\r\nthis.deleteFeed = this.deleteFeed.bind(this);\r\nthis.editFeed = this.editFeed.bind(this);\r\nthis.deleteFeedAction = this.deleteFeedAction.bind(this);\r\nthis.logout = this.logout.bind(this);\r\n}\r\n\r\ncomponentWillMount() {\r\nif(sessionStorage.getItem(\"userData\")){\r\nthis.getUserFeed();\r\n}\r\nelse{\r\nthis.setState({redirectToReferrer: true});\r\n}\r\n}\r\n\r\nfeedUpdate(e) {\r\ne.preventDefault();\r\nlet data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\nlet postData = { user_id: data.userData.user_id, feed: this.state.userFeed };\r\nif (this.state.userFeed) {\r\nPostData('feedUpdate', postData).then((result) => {\r\nlet responseJson = result;\r\nthis.setState({data: responseJson.feedData});\r\n});\r\n}\r\n}\r\n\r\ndeleteFeed(e){\r\nconfirmAlert({\r\ntitle: 'Delete Feed',\r\nmessage: 'Are you sure to delete this feed.',\r\nbuttons: [\r\n{\r\nlabel: 'Yes',\r\nonClick: () => this.deleteFeedAction(e)\r\n},\r\n{\r\nlabel: 'No',\r\n//onClick: () => alert('Click No')\r\n}\r\n]\r\n});\r\n}\r\n\r\ndeleteFeedAction(e){\r\nlet updateIndex=e.target.getAttribute('value');\r\nlet feed_id=document.getElementById(\"del\").getAttribute(\"data\");\r\nlet data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\nlet postData = { user_id: data.userData.user_id,feed_id: feed_id };\r\nif (postData) {\r\nPostData('feedDelete', postData).then((result) => {\r\nthis.state.data.splice(updateIndex,1);\r\nthis.setState({data:this.state.data});\r\nif(result.success){\r\nalert(result.success);\r\n}\r\nelse\r\nalert(result.error);\r\n});\r\n}\r\n}\r\n\r\ngetUserFeed() {\r\nlet data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\nthis.setState({name:data.userData.name});\r\nlet postData = { user_id: data.userData.user_id};\r\nif (data) {\r\nPostData('feed', postData).then((result) => {\r\nlet responseJson = result;\r\nif(responseJson.feedData){\r\nthis.setState({data: responseJson.feedData});\r\nconsole.log(this.state);\r\n}\r\n});\r\n}\r\n}\r\nonChange(e){\r\nthis.setState({userFeed:e.target.value});\r\n}\r\n\r\nlogout(){\r\nsessionStorage.setItem(\"userData\",'');\r\nsessionStorage.clear();\r\nthis.setState({redirectToReferrer: true});\r\n}\r\n\r\nrender() {\r\nif (this.state.redirectToReferrer) {\r\nreturn (<Redirect to={'/login'}/>)\r\n}\r\n\r\nreturn (\r\n<div className=\"row\" id=\"Body\">\r\n<div className=\"medium-12 columns\">\r\n<a href=\"#\" onClick={this.logout} className=\"logout\">Logout</a>\r\n<form onSubmit={this.feedUpdate} method=\"post\">\r\n<input name=\"userFeed\" onChange={this.onChange} value={this.state.userFeed} type=\"text\" placeholder=\"Write your feed here...\"/>\r\n<input type=\"submit\" value=\"Post\" className=\"button\" onClick={this.feedUpdate}/>\r\n</form>\r\n</div>\r\n\r\n</div>\r\n);\r\n}\r\n}\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PostData} from '../../services/PostData';\r\nclass Employee extends Component {\r\nconstructor(){\r\nsuper();\r\nthis.state = {\r\nusername: '',\r\npassword: '',\r\nredirectToReferrer: false\r\n};\r\nthis.employee = this.employee.bind(this);\r\nthis.onChange = this.onChange.bind(this);\r\n}\r\nemployee() {\r\nif(this.state.username && this.state.password){\r\nPostData('login',this.state).then((result) => {\r\nlet responseJson = result;\r\nif(responseJson.userData){\r\nsessionStorage.setItem('userData',JSON.stringify(responseJson));\r\nthis.setState({redirectToReferrer: true});\r\n}\r\nelse\r\nalert(result.error);\r\n});\r\n}\r\n}\r\nonChange(e){\r\nthis.setState({[e.target.name]:e.target.value});\r\n}\r\nrender() {\r\nif (this.state.redirectToReferrer) {\r\nreturn (<Redirect to={'/home'}/>)\r\n}\r\nif(sessionStorage.getItem('userData')){\r\nreturn (<Redirect to={'/home'}/>)\r\n}\r\nreturn (\r\n<div className=\"row\" id=\"Body\">\r\n<div className=\"medium-5 columns left\">\r\n<h4>Employee Login</h4>\r\n<input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/>\r\n<input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\r\n<input type=\"submit\" className=\"button\" value=\"Login\" onClick={this.login}/>\r\n<a href=\"/forgotpassword\">Forgot Password</a>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default Employee;","import React, {Component} from 'react';\r\nimport {PostData} from '../../services/PostData';\r\nimport {Redirect} from 'react-router-dom';\r\nclass ForgotPassword extends Component {\r\nconstructor(props){\r\nsuper(props);\r\nthis.state = {\r\nusername: '',\r\npassword: '',\r\nemail: '',\r\nname: '',\r\nredirectToReferrer: false\r\n};\r\nthis.forgotpassword = this.forgotpassword.bind(this);\r\nthis.onChange = this.onChange.bind(this);\r\n}\r\n\r\nforgotpassword() {\r\nif(this.state.username && this.state.password && this.state.email && this.state.name){\r\nPostData('signup',this.state).then((result) => {\r\nlet responseJson = result;\r\nif(responseJson.userData){\r\nsessionStorage.setItem('userData',JSON.stringify(responseJson));\r\nthis.setState({redirectToReferrer: true});\r\n}\r\nelse\r\nalert(result.error);\r\n});\r\n}\r\n}\r\nonChange(e){\r\nthis.setState({[e.target.name]:e.target.value});\r\n}\r\nrender() {\r\nif (this.state.redirectToReferrer || sessionStorage.getItem('userData')) {\r\nreturn (<Redirect to={'/home'}/>)\r\n}\r\nreturn (\r\n<div className=\"row \" id=\"sBody\">\r\n<div className=\"medium-5 columns left\">\r\n<h4>Forgot Password</h4>\r\n<input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={this.onChange}/>\r\n<input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={this.onChange}/>\r\n<input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/>\r\n<input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\r\n<input type=\"submit\" className=\"button\" value=\"Sign Up\" onClick={this.signup}/>\r\n<a href=\"/employee\">Login</a>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default ForgotPassword;","import React, {Component} from 'react';\r\nclass NotFound extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"row small-up-2 medium-up-3 large-up-4\" id=\"Body\">\r\n<div className=\"medium-12 columns\">\r\n<h2>404 Page</h2>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default NotFound;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Welcome from '././components/Welcome/Welcome';\r\nimport Home from '././components/Home/Home';\r\nimport Employee from '././components/Employee/Employee';\r\nimport ForgotPassword from '././components/Employee/ForgotPassword';\r\nimport NotFound from '././components/NotFound/NotFound';\r\n\r\nconst Routes = () => (\r\n<BrowserRouter >\r\n<Switch>\r\n<Route exact path=\"/\" component={Welcome}/>\r\n<Route path=\"/home\" component={Home}/>\r\n<Route path=\"/employee\" component={Employee}/>\r\n<Route path=\"/forgotpassword\" component={ForgotPassword}/>\r\n<Route path=\"*\" component={NotFound}/>\r\n</Switch>\r\n</BrowserRouter>\r\n);\r\nexport default Routes;","import React, { Component } from 'react';\r\nimport './Header.css';\r\nclass Header extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"callout headcolor\" id=\"Header\">\r\n<div className=\"row column\">\r\n<a href=\"/\"><h1 id=\"tit\">{this.props.name}</h1></a>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default Header;","import React, {Component} from 'react';\r\nclass Footer extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"row\" id=\"footer\">\r\n<div className=\"medium-12 columns\">\r\n<p>Copyright 2019 , <a href=\"https://neuralinfo.org\"> Neural</a></p>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default Footer;","import React, {Component} from 'react';\r\nclass MobileHeader extends Component {\r\nshowSidebar(){\r\nconsole.log(\"HI\");\r\n}\r\nrender() {\r\nreturn (\r\n<div className=\"title-bar hide-for-large\">\r\n<div className=\"title-bar-left\">\r\n<button className=\"menu-icon\" type=\"button\" data-open=\"my-info\" onClick={this.showSidebar}></button>\r\n<span className=\"title-bar-title\">{this.props.name} </span>\r\n</div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default MobileHeader;","import React, { Component } from 'react';\nimport './styles/foundation.min.css';\nimport './styles/custom.css';\nimport Routes from './routes';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport MobileHeader from './components/MobileHeader/MobileHeader';\nclass App extends Component {\nconstructor(){\nsuper();\nthis.state={\nappName: \"Neural-PMP\",\nhome: false\n}\n}\nrender() {\nreturn (\n<div className=\"off-canvas-wrapper\">\n<div className=\"off-canvas-wrapper-inner\" data-off-canvas-wrapper>\n<div className=\"off-canvas-content\" data-off-canvas-content>\n<MobileHeader name={this.state.appName}/>\n<Header name={this.state.appName}/>\n<Routes name={this.state.appName}/>\n<hr/>\n<Footer/>\n</div>\n</div>\n</div>\n);\n}\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}